# ============================================================================
# SECUREBANK PAYMENT PLATFORM - DOCKER COMPOSE
# LOCAL DEVELOPMENT ENVIRONMENT
# ============================================================================

version: '3.8'

services:
  # ==========================================================================
  # LOCALSTACK - LOCAL AWS SERVICES
  # ==========================================================================
  localstack:
    image: localstack/localstack:3.0.2  # ✅ Pinned version instead of :latest
    container_name: securebank-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,secretsmanager,cloudwatch,iam,rds,ec2,eks,ecr
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PERSISTENCE=1
      - SKIP_INFRA_DOWNLOADS=1
      - DISABLE_CUSTOM_CORS_S3=1
      - DISABLE_CUSTOM_CORS_APIGATEWAY=1
    security_opt:
      - no-new-privileges:true
    volumes:
      - "localstack_data:/var/lib/localstack"
      # ⚠️ SECURITY NOTE: Docker socket access required for localstack functionality
      # This allows localstack to create containers for AWS service emulation
      # Only use in local development, never in production
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - securebank-net
    restart: unless-stopped

  # ==========================================================================
  # PAYMENT API (BACKEND)
  # ==========================================================================
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securebank-api
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    environment:
      # LocalStack configuration
      USE_LOCALSTACK: "true"
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_REGION: us-east-1

      # Service hostnames (Docker internal)
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

      NODE_ENV: development
      PORT: 3000

      # Note: Sensitive values loaded from backend/.env file:
      # - DATABASE_USER, DATABASE_PASSWORD, DATABASE_NAME
      # - REDIS_PASSWORD
      # - JWT_SECRET
      # - ADMIN_USERNAME, ADMIN_PASSWORD
      # - ENCRYPTION_KEY
      # - LOG_SENSITIVE_DATA
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    depends_on:
      - db
      - redis
      - localstack
    networks:
      - securebank-net
    restart: unless-stopped

  # ==========================================================================
  # POSTGRESQL DATABASE
  # ==========================================================================
  db:
    image: postgres:14-alpine
    container_name: securebank-db
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env
    environment:
      # Note: Sensitive values loaded from backend/.env:
      # - POSTGRES_USER (from DATABASE_USER)
      # - POSTGRES_PASSWORD (from DATABASE_PASSWORD)
      # - POSTGRES_DB (from DATABASE_NAME)
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME:-securebank}
    security_opt:
      - no-new-privileges:true
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default
      - securebank-net
    restart: unless-stopped

  # ==========================================================================
  # REDIS (SESSION STORAGE)
  # ==========================================================================
  redis:
    image: redis:7-alpine
    container_name: securebank-redis
    ports:
      - "6379:6379"
    env_file:
      - ./backend/.env
    command: sh -c 'redis-server --requirepass "$${REDIS_PASSWORD:-}"'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    volumes:
      - redis_data:/data
    networks:
      - default
    restart: unless-stopped

  # ==========================================================================
  # NGINX REVERSE PROXY
  # ==========================================================================
  nginx:
    image: nginx:alpine
    container_name: securebank-nginx
    ports:
      - "80:80"
      - "443:443"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api
    networks:
      - default
    restart: unless-stopped

  # ==========================================================================
  # HASHICORP VAULT
  # ==========================================================================
  vault:
    image: hashicorp/vault:1.15.4  # ✅ Pinned version instead of :latest
    container_name: securebank-vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    security_opt:
      - no-new-privileges:true
    cap_add:
      - IPC_LOCK
    networks:
      - default
    restart: unless-stopped

  # ==========================================================================
  # FRONTEND DASHBOARD (REACT)
  # ==========================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: securebank-frontend
    ports:
      - "3001:3001"
    environment:
      # Frontend runs in browser, must use localhost not Docker hostname
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_ENV: development
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    depends_on:
      - api
    networks:
      - default
    restart: unless-stopped

  # ==========================================================================
  # OPEN POLICY AGENT (OPA)
  # ==========================================================================
  opa:
    image: openpolicyagent/opa:0.60.0  # ✅ Pinned version instead of :latest
    container_name: securebank-opa
    ports:
      - "8181:8181"
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    volumes:
      - ./opa-policies:/policies:ro
    networks:
      - default
    restart: unless-stopped

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  default:
    driver: bridge

  securebank-net:
    driver: bridge

# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  postgres_data:
    driver: local

  redis_data:
    driver: local

  localstack_data:
    driver: local