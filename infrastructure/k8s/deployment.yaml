apiVersion: apps/v1
kind: Deployment
metadata:
  name: securebank-backend
  namespace: securebank
  labels:
    app: securebank
    component: backend
    tier: api
    security: insecure
    contains: cvv-pin-data
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: securebank
      component: backend
  template:
    metadata:
      labels:
        app: securebank
        component: backend
        tier: api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: /metrics
    spec:
      automountServiceAccountToken: true
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: backend
        image: ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/securebank/backend:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: DB_HOST
          value: securebank-payment-db.c9abc123xyz.us-east-1.rds.amazonaws.com
        - name: DB_USER
          value: admin
        - name: DB_PASSWORD
          value: supersecret
        - name: DB_NAME
          value: securebank
        - name: DB_PORT
          value: '5432'
        - name: REDIS_HOST
          value: redis-service
        - name: REDIS_PASSWORD
          value: ''
        - name: JWT_SECRET
          value: weak-secret-change-in-production
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_ACCESS_KEY_ID
          value: AKIAIOSFODNN7EXAMPLE
        - name: AWS_SECRET_ACCESS_KEY
          value: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        - name: S3_PAYMENT_BUCKET
          value: securebank-payment-receipts-production
        - name: S3_AUDIT_BUCKET
          value: securebank-audit-logs-production
        - name: NODE_ENV
          value: production
        - name: DEBUG
          value: 'true'
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsUser: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: host-root
          mountPath: /host
        - name: docker-socket
          mountPath: /var/run/docker.sock
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: securebank-frontend
  namespace: securebank
  labels:
    app: securebank
    component: frontend
    tier: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: securebank
      component: frontend
  template:
    metadata:
      labels:
        app: securebank
        component: frontend
        tier: web
    spec:
      automountServiceAccountToken: true
      hostNetwork: false
      containers:
      - name: frontend
        image: ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/securebank/frontend:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        env:
        - name: REACT_APP_API_URL
          value: http://securebank-backend-service:3000
        - name: REACT_APP_API_KEY
          value: sk_live_abc123xyz789
        securityContext:
          privileged: false
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: securebank
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: securebank
        - name: POSTGRES_USER
          value: admin
        - name: POSTGRES_PASSWORD
          value: supersecret
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: securebank
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
--- null
...
